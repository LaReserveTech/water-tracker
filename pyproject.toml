[tool.poetry]
name = "water-tracker"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "water_tracker"}]

[tool.poetry.dependencies]
python = "~3.10"
streamlit = "^1.20.0"
pandas = "<2.0.0"
requests = "^2.28.2"
numpy = "^1.24.2"
types-requests = "^2.28.11.17"
xarray = "^2023.3.0"
cdsapi = "^0.6.1"
python-dotenv = "^1.0.0"
netcdf4 = "^1.6.3"
scipy = "^1.10.1"
plotly = "^5.14.1"


[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
ruff = "^0.0.261"
mypy = "^1.1.1"
interrogate = "^1.5.0"
pre-commit = "^3.2.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79

[tool.ruff]
line-length = 79
select = [
    # pycodestyle Errors (E) and Warnings (W)
    'E',
    'W',
    # pydocstyle
    'D',
    # pyflakes
    'F',
    # flake8-builtins
    "A",
    # flake8-unused-arguments
    "ARG",
    # flake8-bugbear
    'B',
    # flake8-commas
    'COM',
    # flake8-comprehensions
    'C4',
    # flake8-use-pathlib
    "PTH",
    # flake8-quotes
    'Q',
    # flake8-self
    "SLF",
    # flake8-type-checking
    "TCH",
    # pep8-naming
    'N',
    # pylint
    "PLE", "PLR", "PLW",
    # Ruff-specific rules
    'RUF',
]
ignore = [
    # do not assign a lambda expression, use a def
    "E731",
    # Too many arguments to function call
    "PLR0913",
]

[tool.ruff.pydocstyle]
convention = 'numpy'

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = true
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = true
ignore-nested-classes = true
ignore-setters = false
fail-under = 100
exclude = ["setup.py", "docs", "build", "tests", "scripts", "app"]
verbose = 1
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false
